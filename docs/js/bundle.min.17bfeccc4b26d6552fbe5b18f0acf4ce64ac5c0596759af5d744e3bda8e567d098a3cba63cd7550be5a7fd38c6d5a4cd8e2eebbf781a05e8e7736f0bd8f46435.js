const doc=document.documentElement;const toggleId='toggle';const showId='show';const menu='menu';const parentURL='https://bb1950328.github.io/BrickSim';const quickLinks='Quick links';const searchResultsLabel='Search Results';const shortSearchQuery='Query is too short'
const typeToSearch='Type to search';const noMatchesFound='No matches found';;function isObj(obj){return(obj&&typeof obj==='object'&&obj!==null)?true:false;}
function createEl(element='div'){return document.createElement(element);}
function emptyEl(el){while(el.firstChild)
el.removeChild(el.firstChild);}
function elem(selector,parent=document){let elem=isObj(parent)?parent.querySelector(selector):false;return elem?elem:false;}
function elems(selector,parent=document){let elems=isObj(parent)?parent.querySelectorAll(selector):[];return elems.length?elems:false;}
function pushClass(el,targetClass){if(isObj(el)&&targetClass){let elClass=el.classList;elClass.contains(targetClass)?false:elClass.add(targetClass);}}
function deleteClass(el,targetClass){if(isObj(el)&&targetClass){let elClass=el.classList;elClass.contains(targetClass)?elClass.remove(targetClass):false;}}
function modifyClass(el,targetClass){if(isObj(el)&&targetClass){const elClass=el.classList;elClass.contains(targetClass)?elClass.remove(targetClass):elClass.add(targetClass);}}
function containsClass(el,targetClass){if(isObj(el)&&targetClass&&el!==document){return el.classList.contains(targetClass)?true:false;}}
function isChild(node,parentClass){let objectsAreValid=isObj(node)&&parentClass&&typeof parentClass=='string';return(objectsAreValid&&node.closest(parentClass))?true:false;}
function elemAttribute(elem,attr,value=null){if(value){elem.setAttribute(attr,value);}else{value=elem.getAttribute(attr);return value?value:false;}}
function deleteChars(str,subs){let newStr=str;if(Array.isArray(subs)){for(let i=0;i<subs.length;i++){newStr=newStr.replace(subs[i],'');}}else{newStr=newStr.replace(subs,'');}
return newStr;}
function isBlank(str){return(!str||str.trim().length===0);}
function isMatch(element,selectors){if(isObj(element)){if(selectors.isArray){let matching=selectors.map(function(selector){return element.matches(selector)})
return matching.includes(true);}
return element.matches(selectors)}}
function closestInt(goal,collection){const closest=collection.reduce(function(prev,curr){return(Math.abs(curr-goal)<Math.abs(prev-goal)?curr:prev);});return closest;}
function hasClasses(el){if(isObj(el)){const classes=el.classList;return classes.length}}
function wrapEl(el,wrapper){el.parentNode.insertBefore(wrapper,el);wrapper.appendChild(el);}
function wrapText(text,context,wrapper='mark'){let open=`<${wrapper}>`;let close=`</${wrapper}>`;function wrap(context){let c=context.innerHTML;let pattern=new RegExp(text,"gi");let matches=text.length?c.match(pattern):null;if(matches){matches.forEach(function(matchStr){c=c.replaceAll(matchStr,`${open}${matchStr}${close}`);context.innerHTML=c;});}}
const contents=["h1","h2","h3","h4","h5","h6","p","code","td"];contents.forEach(function(c){const cs=elems(c,context);if(cs.length){cs.forEach(function(cx,index){if(cx.children.length>=1){Array.from(cx.children).forEach(function(child){wrap(child);})
wrap(cx);}else{wrap(cx);}});}});const hyperLinks=elems('a');if(hyperLinks){hyperLinks.forEach(function(link){const href=link.href.replaceAll(encodeURI(open),"").replaceAll(encodeURI(close),"");link.href=href;});}};(function calcNavHeight(){const nav=elem('.nav_header');const navHeight=nav.offsetHeight+25;return navHeight;})();function toggleMenu(event){const target=event.target;const isToggleControl=target.matches(`.${toggleId}`);const isWithToggleControl=target.closest(`.${toggleId}`);const showInstances=elems(`.${showId}`)?Array.from(elems(`.${showId}`)):[];const menuInstance=target.closest(`.${menu}`);function showOff(target,self=false){showInstances.forEach(function(showInstance){if(!self){deleteClass(showInstance,showId);}
if(showInstance!==target.closest(`.${menu}`)){deleteClass(showInstance,showId);}});}
if(isToggleControl||isWithToggleControl){const menu=isWithToggleControl?isWithToggleControl.parentNode.parentNode:target.parentNode.parentNode;event.preventDefault();modifyClass(menu,showId);}else{if(!menuInstance){showOff(target);}else{showOff(target,true);}}}
(function markInlineCodeTags(){const codeBlocks=elems('code');if(codeBlocks){codeBlocks.forEach(function(codeBlock){if(!hasClasses(codeBlock)){codeBlock.children.length?false:pushClass(codeBlock,'noClass');}});}})();function activeHeading(position,listLinks){let active='active';let linksToModify=Object.create(null);linksToModify.active=listLinks.filter(function(link){return containsClass(link,active);})[0];linksToModify.new=listLinks.filter(function(link){return parseInt(link.dataset.position)===position})[0];if(linksToModify.active!=linksToModify.new){linksToModify.active?deleteClass(linksToModify.active,active):false;pushClass(linksToModify.new,active);}};function loadActions(){(function updateDate(){const date=new Date();const year=date.getFullYear();const yearEl=elem('.year');yearEl?year.innerHTML=year:false;})();(function customizeSidebar(){const tocActive='toc_active';const aside=elem('aside');const tocs=elems('nav',aside);if(tocs){tocs.forEach(function(toc){toc.id="";pushClass(toc,'toc');if(toc.children.length>=1){const tocItems=Array.from(toc.children[0].children);const previousHeading=toc.previousElementSibling;previousHeading.matches('.active')?pushClass(toc,tocActive):false;tocItems.forEach(function(item){pushClass(item,'toc_item');pushClass(item.firstElementChild,'toc_link');})}});const currentToc=elem(`.${tocActive}`);if(currentToc){const pageInternalLinks=Array.from(elems('a',currentToc));const pageIds=pageInternalLinks.map(function(link){return link.hash;});const linkPositions=pageIds.map(function(id){const heading=document.getElementById(id.replace('#',''));const position=heading.offsetTop;return position;});pageInternalLinks.forEach(function(link,index){link.dataset.position=linkPositions[index]});window.addEventListener('scroll',function(e){let position=window.scrollY;let active=closestInt(position,linkPositions);activeHeading(active,pageInternalLinks);});}}})();(function markExternalLinks(){let links=elems('a');const contentWrapperClass='.content';if(links){Array.from(links).forEach(function(link,index){let target,rel,blank,noopener,attr1,attr2,url,isExternal;url=elemAttribute(link,'href');isExternal=(url&&typeof url=='string'&&url.startsWith('http'))&&!url.startsWith(parentURL)&&link.closest(contentWrapperClass);if(isExternal){target='target';rel='rel';blank='_blank';noopener='noopener';attr1=elemAttribute(link,target);attr2=elemAttribute(link,noopener);attr1?false:elemAttribute(link,target,blank);attr2?false:elemAttribute(link,rel,noopener);}});}})();let headingNodes=[],results,link,icon,current,id,tags=['h2','h3','h4','h5','h6'];current=document.URL;tags.forEach(function(tag){results=document.getElementsByTagName(tag);Array.prototype.push.apply(headingNodes,results);});function sanitizeURL(url){const hash='#';const positionOfHash=url.indexOf(hash);if(positionOfHash>-1){const id=url.substr(positionOfHash,url.length-1);url=url.replace(id,'');}
return url}
headingNodes.forEach(function(node){link=createEl('a');icon=createEl('img');icon.src='https://bb1950328.github.io/BrickSim/icons/link.svg';link.className='link icon';link.appendChild(icon);id=node.getAttribute('id');if(id){link.href=`${sanitizeURL(current)}#${id}`;node.appendChild(link);pushClass(node,'link_owner');}});const copyToClipboard=str=>{let copy,selection,selected;copy=createEl('textarea');copy.value=str;copy.setAttribute('readonly','');copy.style.position='absolute';copy.style.left='-9999px';selection=document.getSelection();doc.appendChild(copy);selected=selection.rangeCount>0?selection.getRangeAt(0):false;copy.select();document.execCommand('copy');doc.removeChild(copy);if(selected){selection.removeAllRanges();selection.addRange(selected);}}
function copyFeedback(parent){const copyText=document.createElement('div');const yanked='link_yanked';copyText.classList.add(yanked);copyText.innerText='Link Copied';if(!elem(`.${yanked}`,parent)){parent.appendChild(copyText);setTimeout(function(){},3000);}}
(function copyHeadingLink(){let deeplink,deeplinks,newLink,parent,target;deeplink='link';deeplinks=elems(`.${deeplink}`);if(deeplinks){document.addEventListener('click',function(event)
{target=event.target;parent=target.parentNode;if(target&&containsClass(target,deeplink)||containsClass(parent,deeplink)){event.preventDefault();newLink=target.href!=undefined?target.href:target.parentNode.href;copyToClipboard(newLink);target.href!=undefined?copyFeedback(target):copyFeedback(target.parentNode);}});}})();const light='light';const dark='dark';const storageKey='colorMode';const key='--color-mode';const data='data-mode';const bank=window.localStorage;function prefersColor(mode){return `(prefers-color-scheme: ${mode})`;}
function systemMode(){if(window.matchMedia){const prefers=prefersColor(dark);return window.matchMedia(prefers).matches?dark:light;}
return light;}
function currentMode(){let acceptableChars=light+dark;acceptableChars=[...acceptableChars];let mode=getComputedStyle(doc).getPropertyValue(key).replace(/\"/g,'').trim();mode=[...mode].filter(function(letter){return acceptableChars.includes(letter);});return mode.join('');}
function changeMode(isDarkMode){if(isDarkMode){bank.setItem(storageKey,light)
elemAttribute(doc,data,light);}else{bank.setItem(storageKey,dark);elemAttribute(doc,data,dark);}}
(function lazy(){function lazyLoadMedia(element){let mediaItems=elems(element);if(mediaItems){Array.from(mediaItems).forEach(function(item){item.loading="lazy";});}}
lazyLoadMedia('iframe');lazyLoadMedia('img');})();(function makeTablesResponsive(){const tables=elems('table');if(tables){tables.forEach(function(table){const tableWrapper=createEl();pushClass(tableWrapper,'scrollable');wrapEl(table,tableWrapper);});}})();function pickModePicture(user,system,context){const pictures=elems('picture');if(pictures){pictures.forEach(function(picture){let source=picture.firstElementChild;if(user==system){context?source.media=prefersColor(dark):false;}else{if(system==light){source.media=(user===dark)?prefersColor(light):prefersColor(dark);}else{source.media=(user===dark)?prefersColor(dark):prefersColor(light);}}});}}
function setUserColorMode(mode=false){const isDarkMode=currentMode()==dark;const storedMode=bank.getItem(storageKey);if(storedMode){if(mode){changeMode(isDarkMode);}else{elemAttribute(doc,data,storedMode);}}else{if(mode===true){changeMode(isDarkMode)}}
const sysMode=systemMode();const userMode=doc.dataset.mode;doc.dataset.systemmode=sysMode;if(userMode){pickModePicture(userMode,sysMode,mode);}}
setUserColorMode();doc.addEventListener('click',function(event){let target=event.target;let modeClass='color_choice';let isModeToggle=containsClass(target,modeClass);if(isModeToggle){setUserColorMode(true);}
toggleMenu(event);});}
window.addEventListener('load',loadActions());