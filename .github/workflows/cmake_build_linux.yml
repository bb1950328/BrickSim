name: CMake Linux Build
on:
  pull_request:
  push:
    paths-ignore:
      - "docs/**"
      - '**/*.md'
      - '**/*.txt'
env:
  BUILD_TYPE: Release
jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04 # todo set this back to ubuntu-latest when ubuntu-latest is 20.04 or higher

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0
    
    - name: Setup Workspace
      run: ./setup_workspace.sh

    - if: "contains(github.event.head_commit.message, 'codeql')"
      name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: cpp

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      env:
        CC: gcc-10
        CXX: g++-10

    - name: get infos
      run: |
        gcc --version
        whereis gcc
        echo "runner.workspace: \"${{runner.workspace}}\""

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --target BrickSim BrickSimTests --config $BUILD_TYPE -j $(nproc --all)

    - if: "contains(github.event.head_commit.message, 'codeql')"
      name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
      with:
        config-file: ./.github/codeql/codeql-config.yml

    - name: Create .deb using CPack
      run: |
        LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{runner.workspace}}/build/lib
        echo "$LD_LIBRARY_PATH"
        sudo ldconfig
        cpack --config ${{runner.workspace}}/build/CPackConfig.cmake

    - name: Copy the .deb file
      run: cp -f ${{runner.workspace}}/BrickSim/_CPack_Packages/Linux/DEB/BrickSim.deb ${{runner.workspace}}/BrickSim/BrickSim.deb

    - name: Upload Binary
      uses: actions/upload-artifact@v2
      with:
        name: BrickSimLinux
        path: |
          ${{runner.workspace}}/BrickSim/BrickSim.deb
          ${{runner.workspace}}/BrickSim/README.md

    - name: Try to find binary
      run: find ${{runner.workspace}} -type f -executable -print

    - name: Upload BrickSimTestsLinux
      uses: actions/upload-artifact@v2
      with:
        name: BrickSimTestsLinux
        path: ${{runner.workspace}}/build/src/test/BrickSimTests
  test:
    name: Catch2 Unittests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download test artifact
        uses: actions/download-artifact@v2
        with:
          name: BrickSimTestsLinux
      - name: Run tests
        run: |
          chmod a+x ${{runner.workspace}}/BrickSim/BrickSimTests
          ldd ${{runner.workspace}}/BrickSim/BrickSimTests
          ${{runner.workspace}}/BrickSim/BrickSimTests -d yes
