<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BrickSim</title><link>https://BrickSim.org/</link><description>Recent content on BrickSim</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 15 Dec 2020 10:44:27 +0100</lastBuildDate><atom:link href="https://BrickSim.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Planned Features</title><link>https://BrickSim.org/docs/features/planned/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/features/planned/</guid><description>The following table lists all bigger features which are planned but not realized yet. Feel free to vote for them on their GitHub Issue.
Description GitHub Issue Display a transform gizmo to translate and rotate things directly inside the 3D view #2 Save the model back to a .ldr or .mpd file #3 Pan function in 3D view #4 Customizable line thickness #5 Set camera origin to part location #7 Static analysis (just here for completeness, there's a separate page for this) Milestone #1 More sophisticated part search to handle queries like title=Hello OR name=World #8 Universal keymap (user can configure keyboard shortcut or mouse event for all actions #11</description></item><item><title>Technologies and dependencies</title><link>https://BrickSim.org/docs/technical_info/technologies_dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/technical_info/technologies_dependencies/</guid><description>Logo Description BrickSim uses C++. The main reason for this choice was execution speed. BrickSim is built using the platform-independent build system CMake. The User Interface is made with Dear ImGui. OpenGL is used for rendering on all platforms. SQLite3 is used to save settings and cache to the disk. The library SQLiteCpp is used.</description></item><item><title>Windows</title><link>https://BrickSim.org/docs/installation/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/installation/windows/</guid><description>currently, the only way to run BrickSim on Windows is to build it from source. A .exe file will be provided as soon as I have figured out how to build it in GitHub Actions on Windows.</description></item><item><title>Workspace Setup</title><link>https://BrickSim.org/docs/contributing/code/workspace_setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/contributing/code/workspace_setup/</guid><description>This page describes how to set up your workspace, so you can develop on BrickSim too.
Preparation on Windows Download MSYS2 from https://www.msys2.org/ and follow the installation instructions there. Execute the following command in a MSYS2 Shell to install git: pacman -S git Preparation on MacOS Execute the following command to install the XCode command line tools if you haven't already: sudo xcode-select --install Preparation on Linux Execute the following command to install git sudo apt install git Setup the workspace Do the platform-specific preparation Clone the repository by git clone --recurse-submodules -j8 https://github.</description></item><item><title>Code structure</title><link>https://BrickSim.org/docs/technical_info/code_structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/technical_info/code_structure/</guid><description>All source files are located in the src/ Subfolder. The src/lib/ folder is for all third-party code.
Files Purpose Description main.cpp Starter This file is the entry point and just creates the controller. controller.h controller.cpp Controller The controller controls the program flow. shaders/* Shaders This folder contains a Shader class which is used to load shaders and modify their state.</description></item><item><title>Linux</title><link>https://BrickSim.org/docs/installation/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/installation/linux/</guid><description>Go to CMake Linux Build, select the topmost run and download the &amp;quot;BrickSimLinux&amp;quot; artifact. Unzip it somewhere Open the terminal and go to the folder you unzipped the files Install the package using sudo apt install ./BrickSim.deb
Maybe you will get a message like E: Unmet dependencies. Try 'apt --fix-broken install' with no packages (or specify a solution).
As the message already says, you have to execute apt --fix-broken install Run the program with BrickSim If you want to uninstall it, execute sudo apt remove bricksim</description></item><item><title>Static Analysis</title><link>https://BrickSim.org/docs/features/static_analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/features/static_analysis/</guid><description>Vision Imagine designing a large bridge with LEGO(R) parts. Wouldn't it be useful if you could see whether your construction is robust before you order the parts? Depending on that, you might even find a better solution that is stronger, uses fewer parts, or looks better.
All that should be possible - if you have the right software. Unfortunately, there's currently no software capable of doing a physics analysis of a LEGO model.</description></item><item><title>Using VS Code on Windows</title><link>https://BrickSim.org/docs/contributing/code/vscode_setup_windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/contributing/code/vscode_setup_windows/</guid><description>add C:\msys64\mingw64\bin to PATH Download and install VS Code from here if you haven't already Install the extensions ms-vscode.cpptools and ms-vscode.cmake-tools Open the BrickSim folder in VS Code. you should get the notifications like in the following screenshot (at least the first one):
click &amp;quot;yes&amp;quot; on the first notification, we'll deal with the second one later. Now it's time to adjust some settings: Press Ctrl + Shift+ P and type &amp;quot;preferences: Open Settings (JSON)&amp;quot;</description></item><item><title>Website</title><link>https://BrickSim.org/docs/contributing/web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/contributing/web/</guid><description>sdafasdasdf</description></item><item><title>Code of Conduct</title><link>https://BrickSim.org/docs/contributing/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/contributing/code_of_conduct/</guid><description>Contributor Covenant Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.
We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</description></item><item><title>External documents</title><link>https://BrickSim.org/docs/technical_info/documents/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/technical_info/documents/</guid><description>OpenGL Khronos OpenGL Wiki OpenGL 3.3 Core Specification OpenGL Tutorial (Also available as PDF) LDraw LDraw Homepage File Format Specification !COLOUR Specification Back Face Culling Specification MPD Specification</description></item><item><title>Mac OS X</title><link>https://BrickSim.org/docs/installation/osx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/installation/osx/</guid><description>currently, the only way to run BrickSim a Mac is to build it from source. A binary file will be provided as soon as I have found someone who knows how to build software on Mac OS X.</description></item><item><title>Using VS Code on Linux</title><link>https://BrickSim.org/docs/contributing/code/vscode_setup_linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/contributing/code/vscode_setup_linux/</guid><description>This tutorial was tested on Ubuntu 20.10, but it should work too on other versions or distributions. You'll have to install packages manually if you don't have apt.
Do all steps from here Install VS Code via a way described in the offical VS Code docs Open VS Code and install the ms-vscode.cpptools and ms-vscode.cmake-tools extensions Press Ctrl + Shift+ P and type &amp;quot;preferences: Open Settings (JSON)&amp;quot;
Hit Enter or click the first result and add the following text: 1 2 3 4 5 6 { &amp;#34;cmake.</description></item><item><title>How to get the codes.txt file</title><link>https://BrickSim.org/docs/installation/get_codes_txt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/installation/get_codes_txt/</guid><description>The codes.txt file contains all parts with the colors they are available in. Because it's unclear whether it's allowed to distribute that file together with the program, you have to download it manually. It's really simple:
Go to https://www.bricklink.com/catalogDownload.asp Select &amp;quot;Part and Color Codes&amp;quot;. Also make sure &amp;quot;Tab-Delimited File&amp;quot; is selected. Click on the download button and save the file in the BrickSim folder</description></item><item><title>Using Visual Studio 2019 on Windows</title><link>https://BrickSim.org/docs/contributing/code/vs_setup_windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/contributing/code/vs_setup_windows/</guid><description>Download Visual Studio 2019 from here if you haven't already Install the C++ workload. The option &amp;quot;C++ CMake tools for Windows&amp;quot; is very important. Clone the repository (https://www.github.com/bb1950328/BrickSim.git) Install vcpkg like described here Navigate to the folder where you cloned vcpkg to and execute the following command: vcpkg.exe install freeglut:x64-windows libzip:x64-windows curl:x64-windows spdlog:x64-windows glm:x64-windows Execute the following command in the BrickSim repository root: mklink /H LICENSE.txt LICENSE PowerShell: 1 2 3 4 5 Expand-Archive &amp;#39;src\lib\rapidjson.</description></item><item><title>Using XCode on macOS</title><link>https://BrickSim.org/docs/contributing/code/xcode_setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/docs/contributing/code/xcode_setup/</guid><description>Download XCode from the AppStore if you haven't already Clone the repository. The cloning feature of XCode did't work correctly on my machine, so I cloned it from the command line: git clone https://www.github.com/bb1950328/BrickSim In the terminal, navigate to the cloned folder and execute ./setup_workspace.sh Because XCode doesn't have a bundled CMake, you have to install it with brew install cmake Then you can generate the XCode project files with cmake: mkdir cmake-build &amp;amp;&amp;amp; cd cmake-build &amp;amp;&amp;amp; cmake -G Xcode .</description></item><item><title>Screenshots</title><link>https://BrickSim.org/screenshots/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://BrickSim.org/screenshots/</guid><description>Here you can see how BrickSim looks and what the main features are.</description></item></channel></rss>