name: CMake Windows Build
on: [push]
env:
  BUILD_TYPE: Release
jobs:
  build:
    runs-on: windows-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        include: [
#          { msystem: MINGW64, arch: x86_64 },
#          { msystem: MINGW32, arch: i686 }
#        ]
    strategy:
      matrix:
        mingw: [ "MINGW32", "MINGW64" ]
        include:
          - mingw: "MINGW32"
            package: "mingw-w64-i686"
          - mingw: "MINGW64"
            package: "mingw-w64-x86_64"

    defaults:
      run:
        shell: bash.exe --login -eo pipefail "{0}"

    env:
      MSYSTEM: ${{ matrix.mingw }}
      CHERE_INVOKING: 1
      name: MSYS2 ${{ matrix.mingw }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
#    - run: echo "::add-path::C:\msys64"
#      shell: cmd

    - name: Set up shell
      run: echo ::add-path::C:\msys64\usr\bin\
      shell: pwsh
    - name: Print system version
      run: |
        uname

    - run: find . -maxdepth 3 -type d -exec ls -ld "{}" \;

    - name: Unzip glew sources
      run: |
        unzip glew-2.1.0.zip
        mv glew-2.1.0 glew

    - run: pacman -Syu

#    - name: Create Build Environment
#      run: cmake -E make_directory ${{runner.workspace}}/build
#
#    - name: Configure CMake
#      shell: bash
#      working-directory: ${{runner.workspace}}/build
#      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release
#      env:
#        CC: gcc-10
#        CXX: g++-10
#
#    - name: get infos
#      run: |
#        gcc --version
#        whereis gcc

    - name: Build
      #working-directory: ${{runner.workspace}}/build
      shell: bash
#      env:
#        CC: gcc-10
#        CXX: g++-10
      run: |
        cmake -G "MinGW Makefiles" .
        cmake --build . --config Release

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE

#    - name: Add glad includes
#      run: unzip -o glad.zip "include/*" -d "/usr"

#    - name: Create Build Environment
#      run: cmake -E make_directory ${{runner.workspace}}/build
#
#    - name: Configure CMake
#      shell: bash
#      working-directory: ${{runner.workspace}}/build
#      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
#      env:
#        CC: gcc-10
#        CXX: g++-10
#
#    - name: get infos
#      run: |
#        gcc --version
#        whereis gcc
#
#    - name: Build
#      working-directory: ${{runner.workspace}}/build
#      shell: bash
#
#      run: cmake --build . --config $BUILD_TYPE
#
#    - name: Test
#      working-directory: ${{runner.workspace}}/build
#      shell: bash
#      run: ctest -C $BUILD_TYPE
#
#    - name: Upload Binary
#      uses: actions/upload-artifact@v2
#      with:
#        name: BrickSimWindows
#        # todo include config.txt and README.md
#        path: ${{runner.workspace}}/build/BrickSim
