<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BrickSim</title><link>https://bb1950328.github.io/BrickSim/</link><description>Recent content on BrickSim</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 15 Dec 2020 10:44:27 +0100</lastBuildDate><atom:link href="https://bb1950328.github.io/BrickSim/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux Workspace Setup</title><link>https://bb1950328.github.io/BrickSim/docs/contributing/code/workspace_setup_linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/contributing/code/workspace_setup_linux/</guid><description>Update your package index: sudo apt update Install some tools for C++ development (if you haven't already): sudo apt install build-essential Clone out this repository with git clone --recurse-submodules -j8 git://github.com/bb1950328/BrickSim.git Execute the following commant to unzip glew: unzip src/lib/glew-2.1.0.zip &amp;amp;&amp;amp; mv glew-2.1.0 src/lib/glew Copy the glad includes: sudo unzip -o src/lib/glad.zip &amp;quot;include/*&amp;quot; -d &amp;quot;/usr&amp;quot; Install some libraries: sudo apt-get install mesa-utils freeglut3-dev libxinerama-dev libxrandr-dev libxcursor-dev libxi-dev libglew-dev libcurl4-openssl-dev libglm-dev libzip-dev Open your project with your favourite IDE (I recommend CLion).</description></item><item><title>Linux Workspace Setup</title><link>https://bb1950328.github.io/BrickSim/docs/contributing/code/workspace_setup_windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/contributing/code/workspace_setup_windows/</guid><description>Download MSYS2 from https://www.msys2.org/ and follow the installation instructions there Execute the following command in a MSYS2 Shell: pacman -S git mingw-w64-x86_64-toolchain mingw-w64-i686-toolchain base-devel mingw-w64-x86_64-cmake mingw-w64-i686-cmake libcurl-devel $(pacman -Ssq freeglut) mingw-w64-x86_64-glm mingw-w64-i686-glm mingw-w64-x86_64-libzip mingw-w64-i686-libzip Clone out this repository with git clone --recurse-submodules -j8 git://github.com/bb1950328/BrickSim.git Unzip src/lib/glew-2.1.0.zip and rename the resulting folder from glew-2.1.0 to glew Unzip the include folder of src/lib/glad.zip and copy the glad and KHR folders to C:\msys64\mingw32\include and to C:\msys64\mingw64\include Open your project with your favourite IDE (I recommend CLion).</description></item><item><title>Planned Features</title><link>https://bb1950328.github.io/BrickSim/docs/features/planned/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/features/planned/</guid><description>The following table lists all bigger features which are planned but not realized yet. Feel free to vote for them on their GitHub Issue.
Description GitHub Issue Display a transform gizmo to translate and rotate things directly inside the 3D view #2 Save the model back to a .ldr or .mpd file #3 Pan function in 3D view #4 Customizable line thickness #5 Set camera origin to part location #7 Static analysis (just here for completeness, there's a separate page for this) Milestone #1 More sophisticated part search to handle queries like title=Hello OR name=World #8 Universal keymap (user can configure keyboard shortcut or mouse event for all actions #11</description></item><item><title>Technologies and dependencies</title><link>https://bb1950328.github.io/BrickSim/docs/technical_info/technologies_dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/technical_info/technologies_dependencies/</guid><description>Logo Description BrickSim uses C++. The main reason for this choice was execution speed. BrickSim is built using the platform-independent build system CMake. The User Interface is made with Dear ImGui. OpenGL is used for rendering on all platforms. SQLite3 is used to save settings and cache to the disk. The library SQLiteCpp is used.</description></item><item><title>Windows</title><link>https://bb1950328.github.io/BrickSim/docs/installation/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/installation/windows/</guid><description>currently, the only way to run BrickSim on Windows is to build it from source. A .exe file will be provided as soon as I have figured out how to build it in GitHub Actions on Windows.</description></item><item><title>Code structure</title><link>https://bb1950328.github.io/BrickSim/docs/technical_info/code_structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/technical_info/code_structure/</guid><description>All source files are located in the src/ Subfolder. The src/lib/ folder is for all third-party code.
Files Purpose Description main.cpp Starter This file is the entry point and just creates the controller. controller.h controller.cpp Controller The controller controls the program flow. shaders/* Shaders This folder contains a Shader class which is used to load shaders and modify their state.</description></item><item><title>Linux</title><link>https://bb1950328.github.io/BrickSim/docs/installation/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/installation/linux/</guid><description> Go to CMake Linux Build, select the topmost run and download the &amp;quot;BrickSimLinux&amp;quot; artifact. Unzip it somewhere Open the terminal and go to the folder you unzipped the files Mark the program as executable with the following command: chmod a+x BrickSim Install some dependencies: sudo apt install libgl1-mesa-dev libglew-dev Run the program with ./BrickSim</description></item><item><title>Static Analysis</title><link>https://bb1950328.github.io/BrickSim/docs/features/static_analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/features/static_analysis/</guid><description>Vision Imagine designing a large bridge with LEGO(R) parts. Wouldn't it be useful if you could see whether your construction is robust before you order the parts? Depending on that, you might even find a better solution that is stronger, uses fewer parts, or looks better.
All that should be possible - if you have the right software. Unfortunately, there's currently no software capable of doing a physics analysis of a LEGO model.</description></item><item><title>Website</title><link>https://bb1950328.github.io/BrickSim/docs/contributing/web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/contributing/web/</guid><description>sdafasdasdf</description></item><item><title>Code of Conduct</title><link>https://bb1950328.github.io/BrickSim/docs/contributing/code_of_conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/contributing/code_of_conduct/</guid><description>Contributor Covenant Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.
We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</description></item><item><title>External documents</title><link>https://bb1950328.github.io/BrickSim/docs/technical_info/documents/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/technical_info/documents/</guid><description>OpenGL Khronos OpenGL Wiki OpenGL 3.3 Core Specification OpenGL Tutorial (Also available as PDF) LDraw LDraw Homepage File Format Specification !COLOUR Specification Back Face Culling Specification MPD Specification</description></item><item><title>Mac OS X</title><link>https://bb1950328.github.io/BrickSim/docs/installation/osx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/installation/osx/</guid><description>currently, the only way to run BrickSim a Mac is to build it from source. A binary file will be provided as soon as I have found someone who knows how to build software on Mac OS X.</description></item><item><title>How to get the codes.txt file</title><link>https://bb1950328.github.io/BrickSim/docs/installation/get_codes_txt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/docs/installation/get_codes_txt/</guid><description>The codes.txt file contains all parts with the colors they are available in. Because it's unclear whether it's allowed to distribute that file together with the program, you have to download it manually. It's really simple:
Go to https://www.bricklink.com/catalogDownload.asp Select &amp;quot;Part and Color Codes&amp;quot;. Also make sure &amp;quot;Tab-Delimited File&amp;quot; is selected. Click on the download button and save the file in the BrickSim folder</description></item><item><title/><link>https://bb1950328.github.io/BrickSim/screenshots/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bb1950328.github.io/BrickSim/screenshots/</guid><description>Here you can see how BrickSim looks and what the main features are.</description></item></channel></rss>